<!DOCTYPE html>
<!--


       444444444       000000000            444444444
      4::::::::4     00:::::::::00         4::::::::4
     4:::::::::4   00:::::::::::::00      4:::::::::4
    4::::44::::4  0:::::::000:::::::0    4::::44::::4
   4::::4 4::::4  0::::::0   0::::::0   4::::4 4::::4
  4::::4  4::::4  0:::::0     0:::::0  4::::4  4::::4
 4::::4   4::::4  0:::::0     0:::::0 4::::4   4::::4
4::::444444::::4440:::::0 000 0:::::04::::444444::::444
4::::::::::::::::40:::::0 000 0:::::04::::::::::::::::4
4444444444:::::4440:::::0     0:::::04444444444:::::444
          4::::4  0:::::0     0:::::0          4::::4
          4::::4  0::::::0   0::::::0          4::::4
          4::::4  0:::::::000:::::::0          4::::4
        44::::::44 00:::::::::::::00         44::::::44
        4::::::::4   00:::::::::00           4::::::::4
        4444444444     000000000             4444444444

      -->
      <html>
      <head>
        <title>404 (Page Not Found)</title>
        <style>

          .px200 {
            font-size: 20rem;
          }

          .message {
            position: absolute;
            top: 40%;
            left: 50%;
            text-align: center;
            width: 100%;
            transform: translateX(-50%) translateY(-50%);
            color: #f2f2f2;
            text-shadow: 2px 2px 5px rgba(0,0,0,.15);
            pointer-events: none;
            font-weight: bold;
          }

          a {
            color: #DF3D82;
            border: 1px solid transparent;
            border-bottom: 1px solid #DF3D82;
            text-decoration: none;
          }

          a:hover {
            border-top: 1px solid #DF3D82;
          }
        </style>
        <script src="https://rawgithub.com/soulwire/sketch.js/v1.0/js/sketch.min.js"></script>
      </head>
      <body>
        <div id="container"></div>
        <div class="message">
          <div class="px200 bold">
            404
          </div>
          <div class="px36 uppercase pull-top">
            page not found
          </div>
        </div>

        <script type="text/javascript">
          function Particle(x, y, radius) {
            this.init(x, y, radius);
          }

          Particle.prototype = {

            init: function (x, y, radius) {
              this.alive = true;
              this.radius = radius || 10;
              this.wander = 0.15;
              this.theta = random(TWO_PI);
              this.drag = 0.99;
              this.color = '#f2f2f2';

              this.x = x || 0.0;
              this.y = y || 0.0;

              this.vx = 0.0;
              this.vy = 0.0;
            },

            move: function () {

              this.x += this.vx;
              this.y += this.vy;

              this.vx *= this.drag;
              this.vy *= this.drag;

              this.theta += random(-0.5, 0.5) * this.wander;
              this.vx += sin(this.theta) * 0.1;
              this.vy += cos(this.theta) * 0.1;

              this.radius *= 0.96;
              this.alive = this.radius > 0.1;
            },

            draw: function (ctx) {
              ctx.beginPath();
              ctx.arc(this.x, this.y, this.radius, 0, TWO_PI);
              ctx.fillStyle = this.color;
              ctx.fill();
            }
          };

          var maxParticles = 150;
          var colors = ['#69D2E7', '#DF3D82'];
          var particles = [];
          var pool = [];

          var errorPage = Sketch.create({
            container: document.getElementById('container')
          });

          errorPage.setup = function () {
            var i, x, y;
            for (i = 0; i < 60; i++) {
              x = (errorPage.width * 0.5) + random(-100, 100);
              y = (errorPage.height * 0.5) + random(-100, 100);
              errorPage.spawn(x, y);
            }
          };

          errorPage.spawn = function (x, y) {

            if (particles.length >= maxParticles)
              pool.push(particles.shift());

            particle = pool.length ? pool.pop() : new Particle();
            particle.init(x, y, random(5, 40));

            particle.wander = random(0.5, 2.0);
            particle.color = random(colors);
            particle.drag = random(0.9, 0.99);

            theta = random(TWO_PI);
            force = random(1, 4);

            particle.vx = sin(theta) * force;
            particle.vy = cos(theta) * force;

            particles.push(particle);
          }

          errorPage.update = function () {
            var i, particle;
            for (i = particles.length - 1; i >= 0; i--) {
              particle = particles[i];
              if (particle.alive) particle.move();
              else pool.push(particles.splice(i, 1)[0]);
            }
          };

          errorPage.draw = function () {
            errorPage.globalCompositeOperation = 'luminosity';
            for (var i = particles.length - 1; i >= 0; i--) {
              particles[i].draw(errorPage);
            }
          };

          errorPage.mousemove = function () {
            var particle, theta, force, touch, max, i, j, n;
            for (i = 0, n = errorPage.touches.length; i < n; i++) {
              touch = errorPage.touches[i], max = 2;
              for (j = 0; j < max; j++) errorPage.spawn(touch.x, touch.y);
            }
        };
      </script>

    </body>
    </html>